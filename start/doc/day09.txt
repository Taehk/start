day09
	
	
	함수 (Method, Function)
			자바는 function이 존재할 수 없기 때문에 다 method - (다 클래스 안에 들어가야하기 때문)
					변수/함수가 객체로서 따로 구분되는 파이썬 / 자바스크립트와 다름 <-  얘네는 함수(함수);가 가능
				
		* 한 가지 작업을 실행하기 위해 만들어진 가장 작은 단위의 프로그램
				= 기능의 최소 단위.
			프로그램? 이런 함수들이 모여서 원하는 목적을 이루도록 구성하는 것.
				
			함수 참조
		*** 함수는 누군가 호출해야만 실행이 가능하다.						***
		*** 	=> 함수 스스로가 호출되는 경우는 없다						***
		*** 함수는 실행이 완료되면 자신을 호출한 곳으로 실행순서를 넘긴다 	***
		
		* 만드는 법
			접근지정자 [속성] 반환값 타입 함수이름(매개변수리스트..) {
						함수내용
			}
				  ->	1. 속성 final / static / abstract ...
						2. 접근지정자 -> 해당 개체의 접근할 수 있는 권한을 지정해놓은 것.
						3. 함수 이름 -> 개발자가 지정하는 사용자 정의어
						4. 매개변수리스트 -> 변수 선언 형태로 만드는 것 / 갯수와는 상관없다
										  -> 함수가 원하는 작업을 하기 위해서 필요한 데이터를 지정
						5. 반환값 타입 -> 함수 실행의 목적에 해당하는 값의 타입	(반드시 없거나 1개 <- 자바에서는 그럼)
											ㄴ 결과가 존재하지 않는 경우 = 반드시 void라고 적어준다.
											ㄴ 결과가 존재하는 경우 = 해당 데이터 타입을 적어준다.
												public int, flaot abc() {} <- 절대 불가능
											종류
												void abc(){}
												void abc(int no){}
												int abc(){}
												int abc(int no){}
	
						return명령
							-> 함수 안에서 사용할 수 있는 명령
								의미) 함수 실행을 종료하세요.
									  결과가 있으면 결과를 내보내고 함수를 종료하세요.
									return;
									return 데이터;
								반환값이 void인 경우는 반드시 "return"만 사용할 수 있다. -> 이 경우는 생략 가능
											아닌 경우는 반드시 "return 데이터"만 사용가능.
	
		* 사용 방법
			함수는 반드시 호출해야만 사용할 수 있다.
			따라서 함수를 사용한다는 것은 그 함수를 호출한다는 의미가 된다.
				형식) 함수이름(데이터, ...);
								ㄴ 함수는 그 함수가 실행되기 위해 필요한 데이터를 받을 준비를 하고 있다(매개변수)
								   따라서 그 함수에 일을 시키기 위해서는 필요한 데이터를 반드시 입력해줘야 한다.
								   		-> 결론적으로 데이터(피라미터, parameter)란?
								   				함수가 준비하고 있는 매개변수 리스트에 기억할 데이터를 제공하는 것
								   			-> 데이터는 그 함수가 준비한 매개변수의 갯수와 반드시 일치해야하고
												형태, 순서 역시 일치해야 한다.
	
		* 반환값 사용 방법
			-> 함수의 실행이 종료되면 반환값을 줄 수 있다.
				이 반환값은 함수 호출 부분에 그대로 들어온다.
				
				따라서 함수 호출 부분에 예상되는 반환값을 기록해 보고
				문법적으로 이상이 없으면 그것이 반환값의 사용이 된다.
				
											   			   
		*** 함수의 오버로딩(함수의 중첩) ***
				같은 이름으로 함수를 한 클래스 내에 추가하는 법
					함수에 오버로딩을 하려는 함수가 있어야 한다.
					함수 이름이 같아야 한다.
					* 매개변수리스트가 달라야 한다.(타입, 순서, 갯수 중 하나 이상 달라야 한다.)
					반환값 타입과는 무관하다. -> void, String, int 등 다 써도 됨
				
				
	객체지향
		클래스
		인터페이스
		추상클래스
		
		유용한 클래스들...
		
		컬렉션...
			리스트, 셋, 맵
			
		쓰레드	
		입출력
		네트워크
		
	-----------------------------------------------------------------------
	
	jdbc
	
	awt, swing - GUI 생성 클래스
	