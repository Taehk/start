day05


	이스케이프 코드
		\" - 문자열 내에 "를 표현한다.
		\n - 문자열 내에 줄바꿈을 표현한다.
		\t - 문자열 내에 탭을 표현한다.
		\r - 문자열 내에 캐리지 리턴(엔터)를 표현한다.
		\b - 문자열 내에 백스페이스바를 표현한다.

	---------------------------------------------------------------------------
	
	제어문 ( 명령을 제어해주는 문법 )
	
		조건문
			- if문, if-else문, 다중if문
				if(조건식){
					실행문
				}
				else if(조건식2){ 
					실행문
				}
				else {
					실행문
				}
					
			- switch문
				switch (인자값) {
					case 조건값1:
						실행문;
						break;		<<< ★★★ case의 실행문 뒤에 반드시 break;가 있어야함 ★★★
					case 조건값2:
						실행문;
						break;
					default:
						실행문;
					}
				
				}
	
		반복문
			- for문 <- 형식 자체에 카운터 변수가 포함
				for( 카운터변수 선언 및 초기화; 조건식; 카운터변수 증감식 ) {
					실행문;
				}
					* for문에서 카운터변수선언 초기화, 조건식, 증감식에 아무것도 기술하지 않는 경우는
					  조건식의 결과를 true로 실행하게 된다. (무한루프 / while의 경우 while(true))
					  	ㄴ ;은 무조건 써야함
					  		-> ex) for(;;){}
								
			- 향상된 for문
				for (데이터타입 변수이름 : 시퀸스자료 변수이름){
					실행문;
				}
					ex) int num[] = ~~;
							for(int num1: num) {	<- 선언된 변수가 시퀸스자료 변수
									println(num1); <- num배열에 있는 값 순서대로 출력
									}
				
			- while문  <- 형식 자체에 카운터 변수 미포함(미리 선언 해야 한다.)
				카운터변수 선언 및 초기화;
				while(반복조건){	// true인 경우 실행
					실행문;
					카운터변수 증감식;
				}
					* 블럭{}의 내용이 "명령 하나만 기술되는 경우"는
					  {}기호를 생략할 수 있다. -> ex) if(no>50) break;
					  
			- do while문 <- 후조건반복문 실행(do이후 조건반복) = 최소 1회 실행
				do{
					실행문;
					카운터변수 증감식;
				} while (조건문);


			* break;		= 조건문 break;는 실행문 이후에 사용
			* continue;		= 조건문 continue;는 실행문 이전에 사용(바로 넘기니까)
			
	---------------------------------------------------------------------------
	
		배열 
			데이터타입[] 변수이름 = new 데이터타입[데이터개수];
			데이터타입[] 변수이름 = {데이터1, 데이터2, 데이터3, ...};
			: 타입이 같은 데이터를 일정갯수만큼 모아서 하나로 관리하도록 만들어 놓은 자바의 데이터 타입
			
			특징
				- 타입이 결정 되어야 함.
				- 개수도 결정이 되어야 함. -> 개수 수정 이후에 불가능
			배열 개수
				int 개수변수 = 배열이름.length;
				데이터타입 변수이름 = 배열변수[인덱스]; <- 인덱스는 0부터 시작
				